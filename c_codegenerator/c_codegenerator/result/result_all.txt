file start
Sun Dec 15 15:17:51 ASIA 2019


 ========================= ./input/input1.c =========================
------------------------ code ------------------------
int a = 3;
int b = 5;

int main(){

	int c = 10;
}
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,20)
| (ID="a") TYPE:193a4d0 KIND:VAR SPEC=AUTO LEV=0 VAL=0 ADDR=12
| | TYPE
| | | (int)
| | INIT
| | | N_INIT_LIST_ONE (0,0)
| | | | N_EXP_INT_CONST (0,0)
| | | | | INT=3
| (ID="b") TYPE:193a4d0 KIND:VAR SPEC=AUTO LEV=0 VAL=0 ADDR=16
| | TYPE
| | | (int)
| | INIT
| | | N_INIT_LIST_ONE (0,0)
| | | | N_EXP_INT_CONST (0,0)
| | | | | INT=5
| (ID="main") TYPE:193fd80 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:193fd80)
==================================================




 ========================= ./input/input2.c =========================
------------------------ code ------------------------
struct person{
    int height;
    int id;
};

int main(int argc, char ** argv ){

    struct person obj;
    obj.height = 150;
    obj.id = 1;
}


------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,20)
| (ID="") TYPE:f18b40 KIND:VAR SPEC=AUTO LEV=0 VAL=0 ADDR=12
| | TYPE
| | | (DONE:f18b40)
| (ID="main") TYPE:f18f00 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:f18f00)
==================================================




 ========================= ./input/input3.c =========================
------------------------ code ------------------------
struct Point 
{ 
   int x, y; 
};  
  
int main() 
{ 
   // A valid initialization. member x gets value 0 and y 
   // gets value 1.  The order of declaration is followed. 
   struct Point p1 = {0, 1};  
}
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,20)
| (ID="") TYPE:1ea0b40 KIND:VAR SPEC=AUTO LEV=0 VAL=0 ADDR=12
| | TYPE
| | | (DONE:1ea0b40)
| (ID="main") TYPE:1ea0d60 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:1ea0d60)
==================================================




 ========================= ./input/input4.c =========================
------------------------ code ------------------------
struct Point 
{ 
   int x, y; 
}; 
  
int main() 
{ 
   // Create an array of structures 
   struct Point arr[10]; 
  
   // Access array members 
   arr[0].x = 10; 
   arr[0].y = 20; 
  
//   printf("%d %d", arr[0].x, arr[0].y); 
   return 0; 
} 
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,20)
| (ID="") TYPE:20d6b40 KIND:VAR SPEC=AUTO LEV=0 VAL=0 ADDR=12
| | TYPE
| | | (DONE:20d6b40)
| (ID="main") TYPE:20d6d60 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:20d6d60)
==================================================




 ========================= ./input/input5.c =========================
------------------------ code ------------------------
// function returning the max between two numbers 
int max(int num1, int num2) {

   // local variable declaration 
   int result;
 
   if (num1 > num2)
      result = num1;
   else
      result = num2;
 
   return result; 
}
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,12)
| (ID="max") TYPE:6aac80 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:6aac80)
==================================================




 ========================= ./input/input6.c =========================
------------------------ code ------------------------
int max(int num1, int num2);
 
int main () {

   // local variable definition 
   int a = 100;
   int b = 200;
   int ret;
 
   // calling a function to get max value 
   ret = max(a, b);
 
//   printf( "Max value is : %d\n", ret );
 
   return 0;
}
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,12)
| (ID="max") TYPE:1714c80 KIND:FUNC SPEC=AUTO LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:1714c80)
| (ID="main") TYPE:1714d50 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:1714d50)
==================================================




 ========================= ./input/input7.c =========================
------------------------ code ------------------------
int main() {
  int values[5];
  int i;
//  printf("Enter 5 integers: ");
  
// taking input and storing it in an array
  for(i = 0; i < 5; ++i) {
//     scanf("%d", &values[i]);
  }
//  printf("Displaying integers: ");
  // printing elements of an array
  for(i = 0; i < 5; ++i) {
//     printf("%d\n", values[i]);
  }
  return 0;
}
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,12)
| (ID="main") TYPE:1f8bb60 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:1f8bb60)
==================================================




 ========================= ./input/input8.c =========================
------------------------ code ------------------------
int main(int argc, char **argv){

	int a;
	int b;

	{ 
	int c ; 
	int d ;
	}


	{ 
	int a ; 
	int b;
	}
	
	{
	int c; 
	int d;
	}

}
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,12)
| (ID="main") TYPE:1cdad00 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:1cdad00)
==================================================




 ========================= ./input/input9.c =========================
------------------------ code ------------------------
void fun(){
	int a = 3;
	
}

int main(){

	fun();

	return 0;
}
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,12)
| (ID="fun") TYPE:257bb60 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:257bb60)
| (ID="main") TYPE:257bdc0 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:257bdc0)
==================================================




 ========================= ./input/input10.c =========================
------------------------ code ------------------------
enum {MON, TUE, WED, THU, FRI} date;

int main(int args, char ** argv){

	date = MON;
	
}
------------------------ program ------------------------

start syntax analysis
--- warning at line 5:incompatible types in assignment expression
======= semantic tree ==========
N_PROGRAM (0,16)
| (ID="date") TYPE:cb5ad0 KIND:VAR SPEC=AUTO LEV=0 VAL=0 ADDR=12
| | TYPE
| | | (DONE:cb5ad0)
| (ID="main") TYPE:cb6000 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:cb6000)
==================================================




 ========================= ./input/input11.c =========================
------------------------ code ------------------------
typedef mytype int

int main(){

	mytype a;
	int c;
	
	a = 3;
	c = a+2;
}
------------------------ program ------------------------

start syntax analysis
line 1: syntax error near int 
==================================================




 ========================= ./input/input12.c =========================
------------------------ code ------------------------
union {int a; float b;} myvar;

int main(){

	myvar.a = 3;
	myvar.b = 3.5;	
}
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,20)
| (ID="myvar") TYPE:e71ad0 KIND:VAR SPEC=AUTO LEV=0 VAL=0 ADDR=12
| | TYPE
| | | (DONE:e71ad0)
| (ID="main") TYPE:e71d10 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:e71d10)
==================================================




 ========================= ./input/input13.c =========================
------------------------ code ------------------------
int main(int args, char ** argv){

	fun();
	
}
------------------------ program ------------------------

start syntax analysis
line 3: syntax error: undefined identifier fun near fun
==================================================




 ========================= ./input/input14.c =========================
------------------------ code ------------------------
int fun();


int main(){

}


void fun();
------------------------ program ------------------------

start syntax analysis
line 9: syntax error: redeclaration of identifier fun near ;
==================================================




 ========================= ./input/input15.c =========================
------------------------ code ------------------------
int main(){

	fun(3);

}

int fun(int b){
	
	fun(b);

}
------------------------ program ------------------------

start syntax analysis
line 3: syntax error: undefined identifier fun near fun
==================================================




 ========================= ./input/input16.c =========================
------------------------ code ------------------------
fun(){



}


------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,12)
| (ID="fun") TYPE:1e35b40 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:1e35b40)
==================================================




 ========================= ./input/input17.c =========================
------------------------ code ------------------------
void a = 3;

------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,12)
| (ID="a") TYPE:1e2f680 KIND:VAR SPEC=AUTO LEV=0 VAL=0 ADDR=12
| | TYPE
| | | (void)
| | INIT
| | | N_INIT_LIST_ONE (0,0)
| | | | N_EXP_INT_CONST (0,0)
| | | | | INT=3
==================================================




 ========================= ./input/input18.c =========================
------------------------ code ------------------------
fun(){

	struct s{
		int a = 3;
	};
}
------------------------ program ------------------------

start syntax analysis
line 4: syntax error near = 
==================================================




 ========================= ./input/input19.c =========================
------------------------ code ------------------------
fun(){

	struct s{
		int a;
	};
}
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,12)
| (ID="fun") TYPE:999b40 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:999b40)
==================================================




 ========================= ./input/input20.c =========================
------------------------ code ------------------------
fun(){

	struct s myvar;

}
------------------------ program ------------------------

start syntax analysis
line 5: syntax error: incomplete forward reference for identifier s near }
==================================================




 ========================= ./input/input21.c =========================
------------------------ code ------------------------
fun(){
	gun();

}


gun(){

	fun();

}
------------------------ program ------------------------

start syntax analysis
line 2: syntax error: undefined identifier gun near gun
==================================================




 ========================= ./input/input22.c =========================
------------------------ code ------------------------
struct s myvar;

fun(){

	struct s{ int a;};	

}

------------------------ program ------------------------

start syntax analysis
line 9: syntax error: incomplete forward reference for identifier s at end
==================================================




 ========================= ./input/input23.c =========================
------------------------ code ------------------------
fun(struct s{int id;} a, struct s b){
	struct s c;
}
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,12)
| (ID="fun") TYPE:fd1d80 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:fd1d80)
==================================================




 ========================= ./input/input24.c =========================
------------------------ code ------------------------
fun(struct s{int a;} a, struct s b){

}
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,12)
| (ID="fun") TYPE:c6ad80 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:c6ad80)
==================================================




 ========================= ./input/input25.c =========================
------------------------ code ------------------------
int main()
{
	int* a;
	float* b;
	int c[10];


}
------------------------ program ------------------------

start syntax analysis
======= semantic tree ==========
N_PROGRAM (0,12)
| (ID="main") TYPE:134cb60 KIND:FUNC SPEC=NULL LEV=0 VAL=0 ADDR=0
| | TYPE
| | | (DONE:134cb60)
==================================================




 ========================= ./input/input26.c =========================
------------------------ code ------------------------
int muitiply(int a, int b) {
    int result;
    result=0;
    while (a) {
        if (a%2)
            result=result+b;
        a=a/2;
        b=b*2;
    }
    return result;
}
void main() {
    int i;
    i=multiply(120,3);
//    printf("result=%d\n",i);
}
------------------------ program ------------------------

start syntax analysis
line 14: syntax error: undefined identifier multiply near multiply
==================================================




 ========================= ./input/input27.c =========================
------------------------ code ------------------------
------------------------ program ------------------------
can not open input file: ./input/input27.c
==================================================




 ========================= ./input/input28.c =========================
------------------------ code ------------------------
------------------------ program ------------------------
can not open input file: ./input/input28.c
==================================================




 ========================= ./input/input29.c =========================
------------------------ code ------------------------
------------------------ program ------------------------
can not open input file: ./input/input29.c
==================================================




 ========================= ./input/input30.c =========================
------------------------ code ------------------------
------------------------ program ------------------------
can not open input file: ./input/input30.c
==================================================


